{"version":3,"file":"static/js/916.39fffc4a.chunk.js","mappings":"2NACA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,sBAAsB,gBAAkB,iCAAiC,MAAQ,uBAAuB,UAAY,4B,SC8C3M,EAzCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAS,gBAAYL,EAAZ,YAgBf,IAbAM,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAASF,GAAWG,KAAKJ,EAC1B,GAAE,CAACC,KAEJC,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAYC,SAASC,cAAc,YAGzC,OAFAF,EAAUG,UAAUC,IAAI,UAEjB,WACLJ,EAAUG,UAAUE,OAAO,SAC5B,CACF,GAAE,IAEa,KAAZX,EACF,OACE,gBAAKY,UAAWC,EAAAA,QAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SAC8B,IAA3Bb,EAAQc,QAAQC,OACff,EAAQc,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAClB,eAAIN,UAAWC,EAAAA,KAAf,UACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,qBAAmCI,MACnC,cAAGL,UAAWC,EAAAA,UAAd,SAA8BK,QCf5B,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDYwBG,GADZ,KASpB,eAAIhB,UAAWC,EAAAA,KAAf,SA7BS,iCAmCpB,C","sources":["webpack://react-homework-template/./src/components/Movies/Details/Reviews/Reviews.module.css?1a63","components/Movies/Details/Reviews/Reviews.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Reviews_wrapper__MtAwU\",\"list\":\"Reviews_list__lpRWx\",\"item\":\"Reviews_item__c+edI\",\"cardsAppearanse\":\"Reviews_cardsAppearanse__Pkix9\",\"title\":\"Reviews_title__ijnVf\",\"paragraph\":\"Reviews_paragraph__M-Ej1\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport onSearch from 'components/Fetch/Fetch';\nimport { nanoid } from 'nanoid';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n  const PATH_NAME = `movie/${movieId}/reviews`;\n  const defaulText = 'Sorry, nothing about that';\n\n  useEffect(() => {\n    onSearch(PATH_NAME).then(setReviews);\n  }, [PATH_NAME]);\n\n  useEffect(() => {\n    const elReviews = document.querySelector('#reviews');\n    elReviews.classList.add('active');\n\n    return () => {\n      elReviews.classList.remove('active');\n    };\n  }, []);\n\n  if (reviews !== '') {\n    return (\n      <div className={css.wrapper}>\n        <ul className={css.list}>\n          {reviews.results.length !== 0 ? (\n            reviews.results.map(({ author, content }) => (\n              <li className={css.item} key={nanoid()}>\n                <div className={css.info}>\n                  <h2 className={css.title}>Author: {author}</h2>\n                  <p className={css.paragraph}>{content}</p>\n                </div>\n              </li>\n            ))\n          ) : (\n            <li className={css.item}>{defaulText}</li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Reviews;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["movieId","useParams","useState","reviews","setReviews","PATH_NAME","useEffect","onSearch","then","elReviews","document","querySelector","classList","add","remove","className","css","results","length","map","author","content","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid"],"sourceRoot":""}